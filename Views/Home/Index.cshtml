@using ProductStore.Models
@model IndexViewModel

<link rel="stylesheet" href="~/css/Home/index.css" />

    <div class="sidebar">
        <form action="~/Home/Index">
            <div class="namefilter">
                <label for="NameFilter">Name:</label><br />
                <input type="text" id="NameFilter" name="name" />
            </div>
            <div class="sort">
                <p>Sort by:</p>
                <p>
                    <input type="radio" value="byNameAz" id="byNameAz" name="sortBy" />Name(A-z)
                </p>
                <p>
                    <input type="radio" value="byNameZa" id="byNameZa" name="sortBy" />Name(Z-a)
                </p>
                <p>
                    <input type="radio" value="byPrice_cp_to_exp" id="byPrice_cp_to_exp" name="sortBy" />From cheap to expansive
                </p>
                <p>
                    <input type="radio" value="byPrice_ex_to_cp" id="byPrice_ex_to_cp" name="sortBy" />From expansive to cheap
                </p>
            </div>
            <div class="sort">
                <p>Shape:</p>
                <p>
                    <input type="checkbox" name="circle" id="Circle" />Circle
                </p>
                <p>
                    <input type="checkbox" name="triangle" id="Triangle" />Triangle
                </p>
                <p>
                    <input type="checkbox" name="square" id="Square" />Square
                </p>
            </div>
            <div class="sort">
                <p>Color:</p>
                <p>
                    <input type="checkbox" name="blue" id="Blue" />Blue
                </p>
                <p>
                    <input type="checkbox" name="red" id="Red" />Red
                </p>
                <p>
                    <input type="checkbox" name="yellow" id="Yellow" />Yellow
                </p>
            </div>
            <div class="aplyfltr">
                <p>
                    <button type="submit">Apply filters</button>
                </p>
            </div>
        </form>

    </div>
    @if (User.Identity.IsAuthenticated == true && User.IsInRole("manager"))
    {
        foreach (var item in Model.Products)
        {
            <div class="prod_view_manager">
                <form id="form1" action="~/Manager/ChangeProduct">
                    <input type="text" name="prodName" value="@item.Name" />
                    <div class="prod_img_container">
                        <img src="@item.Image" alt="@item.Name" />
                    </div>
                    <div class="inputPrice">
                        <label for="price">Set price:</label><br />
                        <input type="text" id="price" name="prodPrice" pattern="^\d+(,\d{1,2})?$" value="@item.Price" />
                    </div>
                    <div class="setQuantity">
                        <label for="quantity">Set quantity:</label><br />
                        <input type="number" min="1" max="1000" name="prodQuantity" value="@item.Quantity" />
                    </div>
                    <input type="hidden" name="productId" value="@item.Id" />
                    <input type="submit" value="SAVE CHANGES" />
                </form>
                <form id="form2" action="~/Manager/DeleteProduct">
                    <input type="hidden" name="productId" value="@item.Id" />
                    <input type="submit" value="DELETE" />
                </form>
            </div>
        }
    }
    else
    {
        foreach (var item in Model.Products)
        {
            <div class="prod_view">
                <form action="~/Home/AddtoCart">
                    <p>@item.Name</p>
                    <div class="prod_img_container">
                        <img src="@item.Image" alt="@item.Name" />
                    </div>
                    <div class="price"><b>$@item.Price</b></div>
                    <input type="hidden" name="productId" value="@item.Id" />
                    <input type="number" placeholder="Quantity" min="1" max="100" required name="productQuantity" />
                    <input type="submit" value="Add to Cart" />
                </form>
            </div>
        }
    }
    @if (Model.PageViewModel.HasPreviousPage)
    {
        <div class="previouspage">
            <form action="~/Home/Index">
                <input type="hidden" name="sortBy" value="@ViewBag.SortBy" />
                <input type="hidden" name="name" value="@ViewBag.Name" />
                <input type="hidden" name="circle" value="@ViewBag.Circle" />
                <input type="hidden" name="square" value="@ViewBag.Square" />
                <input type="hidden" name="triangle" value="@ViewBag.Triangle" />
                <input type="hidden" name="blue" value="@ViewBag.Blue" />
                <input type="hidden" name="red" value="@ViewBag.Red" />
                <input type="hidden" name="yellow" value="@ViewBag.Yellow" />
                <input type="hidden" name="page" value="@(Model.PageViewModel.PageNumber - 1)" />
                <input type="submit" value="Previous Page" />
            </form>
        </div>
    }
    @if (Model.PageViewModel.HasNextPage)
    {
        <div class="nextpage">
            <form action="~/Home/Index">
                <input type="hidden" name="sortBy" value="@ViewBag.SortBy" />
                <input type="hidden" name="name" value="@ViewBag.Name" />
                <input type="hidden" name="circle" value="@ViewBag.Circle" />
                <input type="hidden" name="square" value="@ViewBag.Square" />
                <input type="hidden" name="triangle" value="@ViewBag.Triangle" />
                <input type="hidden" name="blue" value="@ViewBag.Blue" />
                <input type="hidden" name="red" value="@ViewBag.Red" />
                <input type="hidden" name="yellow" value="@ViewBag.Yellow" />
                <input type="hidden" name="page" value="@(Model.PageViewModel.PageNumber + 1)" />
                <input type="submit" value="Next Page" />
            </form>
        </div>
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var namefilter = document.getElementById("NameFilter");
            namefilter.value = document.cookie.replace(/(?:(?:^|.*;\s*)NameFilter\s*\=\s*([^;]*).*$)|^.*$/, "$1");

            var radioid = document.cookie.replace(/(?:(?:^|.*;\s*)SortBy\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            document.getElementById(radioid).checked = true;

            var IsCircleChecked = document.cookie.replace(/(?:(?:^|.*;\s*)Circle\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            if (IsCircleChecked == "on") {
                document.getElementById("Circle").checked = true;
            }

            var IsTriangleChecked = document.cookie.replace(/(?:(?:^|.*;\s*)Triangle\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            if (IsTriangleChecked == "on") {
                document.getElementById("Triangle").checked = true;
            }

            var IsSquareChecked = document.cookie.replace(/(?:(?:^|.*;\s*)Square\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            if (IsSquareChecked == "on") {
                document.getElementById("Square").checked = true;
            }

            var IsBlueChecked = document.cookie.replace(/(?:(?:^|.*;\s*)Blue\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            if (IsBlueChecked == "on") {
                document.getElementById("Blue").checked = true;
            }

            var IsRedChecked = document.cookie.replace(/(?:(?:^|.*;\s*)Red\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            if (IsRedChecked == "on") {
                document.getElementById("Red").checked = true;
            }

            var IsYellowChecked = document.cookie.replace(/(?:(?:^|.*;\s*)Yellow\s*\=\s*([^;]*).*$)|^.*$/, "$1");
            if (IsYellowChecked == "on") {
                document.getElementById("Yellow").checked = true;
            }
        });
    </script>
